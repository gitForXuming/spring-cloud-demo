server:
  port: 8762
spring:
  application:
    name: eureka-server
eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka
  instance:
    hostname:
      instance: ${spring.cloud.client.ipAddress}


#eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上
#默认30s
eureka:
  server:
    responseCacheUpdateInvervalMs: 3000
#eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
#由于启用了evict其实就用不太上改这个配置了
#默认180s
eureka:
  server:
    responseCacheAutoExpirationInSeconds: 180

#启用主动失效，并且每次主动失效检测间隔为3s
#默认60s
eureka:
  server:
    eviction-interval-timer-in-ms: 3000

#服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
#注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，这个配置一般为服务刷新时间配置的三倍
#默认90s
eureka:
  instance:
    lease-expiration-duration-in-seconds: 15
#服务刷新时间配置，每隔这个时间会主动心跳一次
#默认30s
eureka:
  instance:
    lease-renewal-interval-in-seconds: 30
#eureka client刷新本地缓存时间
#默认30s
eureka:
  client:
    registryFetchIntervalSeconds: 30

#关闭自我保护
eureka:
  server:
    enable-self-preservation: false

