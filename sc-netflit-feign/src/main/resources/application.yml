server:
  port: 8082
  servlet:
    context-path: "/demo"
spring:
  application:
    name: sc-feign
  resources: #设置可直接访问静态文件
    static-locations: classpath:/resources/,classpath:/static/,classpath:/templates
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
    encoding: utf-8
    check-template-location: true
    mode: LEGACYHTML5
  # redis
  redis:
    host: localhost
    port: 6379
    timeout: 10000
    pool:
      max-active: 8
      max-idle: 8
      min-idle: 1
eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
       defaultZone: http://127.0.0.1:8761/eureka,http://127.0.0.1:8762/eureka

#开启断路器
feign:
  hystrix:
    enabled: true
  compression:
    request:
      enabled: true
    response:
      enabled: true

ribbon:
  ConnectTimeout: 500
  ReadTimeout: 5000
#开启响应压缩功能
feign:
  compression:
    response:
      enabled:  true

#指定压缩请求数据类型
feign:
  compression:
    request:
      mime-types: text/xml;application/xml;application/json
ribbon:
  eager-load:
    enabled: true  #饥饿加载模式 启动的时候就创建ribbon客户端
    clients:   sc-service-provider   #以逗号隔开


#
sc-service-provider:
  ribbon:
    ConnectTimeout: 500
    ReadTimeout: 10000

#服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
#注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，这个配置一般为服务刷新时间配置的三倍
#默认90s
eureka:
  instance:
    lease-expiration-duration-in-seconds: 15
#服务刷新时间配置，每隔这个时间会主动心跳一次
#默认30s
eureka:
  instance:
    lease-renewal-interval-in-seconds: 5
#eureka client刷新本地缓存时间
#默认30s
eureka:
  client:
    registryFetchIntervalSeconds: 5
#eureka客户端ribbon刷新时间
#默认30s
ribbon:
  ServerListRefreshInterval: 1000
#关闭自我保护
eureka:
  server:
    enable-self-preservation: false
